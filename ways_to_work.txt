Minimalists Setup:
- install linux:
  # Debian / Ubuntu - sudo apt install vim git python3-pip
  # RHEL / Centos - sudo yum install vim git python3-pip
  # if you need ansible, follow up with (all distros) - python3 -m pip install ansible

Windows Minalists Setup:
- install python (everyone should agree to the version)
- install notepad++
- install GitHub Desktop

Standard Setup:
- install GitHub Desktop (https://desktop.github.com/)   # MacOS, Windows
- install python (everyone should agree to the version)  # also consider remove old version of python when you upgrade
- visual studio w/ python plugin > pycharm   # either will work as an IDE, but pycharm ONLY will ever do Python

Other Ideas:
- If you need a full OS to program in (an isolated space)...
    - Oracle Cloud (2 vms free)
    - Oracle Virtual Box (on your local machine make a VM)
    - VMWare Workstation (on your local machine make a VM)
- Check out Jupyter as a replacement to visual studio - https://jupyter.org/

Work in Windows / Test in Linux
1) Setup Windows (if you want to dev here)
	- install python
	- install git
	- install github desktop
	- install visual studio
	- install visual studio python plugin
	- setup visual studio to sync to a repo in SCM

2) Setup my "test" Environment
	- build a linux server
	- sudo (yum or apt) install vim git python3-pip
	- python3 -m pip install ansible
	- use "git" to pull from the SCM repo you built in Visual Studio w/ Windows
	- Try running your ansible code (test!)
	- If it doesn't work...
		- go back to windows, fix your code, commit
		- go back to linux test server, git pull your code, and test again
		- repeat if it is still broken!

3) Ask someone within the enterprise how you might link your repo with a webhook to Jenkins, to help phaseout / elminate step 2
	- After several hundred iterations of step 2, you'll want to do this!
